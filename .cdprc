#!/usr/bin/env bash
# vim: set expandtab:

echo "Define helpful functions and aliases:"

edit_diffed_summaries() {
    #vi -O {de,en}/src/SUMMARY.md
    vimdiff -c "syntax off" {de,en}/src/SUMMARY.md
}

edit_translate_all_rft() {
    if command -pv fzf >/dev/null ; then
        while true; do
            FILE=$(cd de/src || exit ; rg --files-with-matches " rft" -- *.md | sort | fzf --reverse --exact --preview='cat {}' --header=">> Please select file to translate and press ENTER. (ESC to cancel.) <<")
            [ -z "$FILE" ] && break
            vim -O {de,en}/src/"$FILE"
        done
    else
        (cd de/src || exit ; rg --files-with-matches " rft" -- *.md | sort)
        read -r -p "Continue? ENTER, or Ctrl-C to cancel: " inp
        for FILE in $(cd de/src || exit ; rg --files-with-matches " rft" -- *.md | sort)
        do
            vim -O {de,en}/src/"$FILE"
            read -r -p "Continue? ENTER, or Ctrl-C to cancel: " inp
            echo  "$inp"
        done
    fi
}

edit_by_status() {
    if command -pv fzf >/dev/null ; then
        while true; do
            shopt -s extglob
            WITHOUT_STATUS=$(rg --files-without-match --glob="**/*.md" "^\[\.status\]:" | wc -l)
            STATUS=$( (rg "^\[\.status\]:" --no-filename --glob="**/*.md" | sort | uniq -c ; printf "%7d %s" "${WITHOUT_STATUS}" "[]: --NO-STATUS--") | fzf --reverse --select-1 --exact --preview='V={}; V="${V#*\]:}"; V=${V//\?/.} ; (if [ "${V}" == " --NO-STATUS--" ] ; then rg --files-without-match "^\[\.status\]:" --glob="**/*.md" ; else rg --files-with-matches "^\[\.status\]:${V}$"  --glob="**/*.md" ; fi) | sort' --header=">> Please select file to edit and press ENTER. (ESC to cancel.) <<")
            [ -z "$STATUS" ] && break
            VALUE="${STATUS#*\]:}"
            VALUE=${VALUE//\?/.}
            while true; do
                if [ "${VALUE}" == " --NO-STATUS--" ] ; then
                    IFS=$'\n' FILES=($(rg --files-without-match "^\[\.status\]:" --glob="**/*.md" | sort | fzf --reverse --exact --multi --bind alt-a:select-all,alt-d:deselect-all --preview='cat {}' --header=">> Please select file to edit and press ENTER. (ESC to cancel.) <<"))
                else
                    # Solution for opening multiple file found here:
                    # https://github-wiki-see.page/m/junegunn/fzf/wiki/examples (Section "Opening files")
                    # Otherwise the LF isn't interpreted correctly by the editor.
                    IFS=$'\n' FILES=($(rg --files-with-matches "^\[\.status\]:${VALUE}$" --glob="**/*.md" | sort | fzf --reverse --exact --multi --bind alt-a:select-all,alt-d:deselect-all --preview='cat {}' --header=">> Please select file to edit and press ENTER. (ESC to cancel.) <<"))
                fi
                [ -z "$FILES" ] && break
                vim -p "${FILES[@]}"
            done
        done
    fi
}


alias vita=edit_translate_all_rft
alias vids=edit_diffed_summaries
alias vibs=edit_by_status

alias vita
alias vids
alias vibs

echo ""


check_ssh_id() {
    IDFILE="$1"
    [ -f "$IDFILE" ] || return 1
    echo "$2"
    if ! ssh-add -T "$IDFILE" 2>/dev/null
    then
        ssh-add "$IDFILE"
    fi
    ssh-add -T "$IDFILE"
}

echo "Check/unlock SSH keys (and set possibly more private settings):"

# Examples, can/should be set to real values in .private-conf.sh
#check_ssh_id  ~/.ssh/id_my_github    "Checking ssh key(s) for GitHub ..."
#check_ssh_id  ~/.ssh/id_my_webserver "Checking ssh key(s) for webserver ..."
#export WEBSERVER="user:DUMMYPASSWORD@myserver.com"
#export WEBSERVER_ROOTDIR="httpdocs"
source .private-conf.sh
