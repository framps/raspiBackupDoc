# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site(s) to Pages

on:
  # Runs on pushes targeting the other branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      # Use pinned versions to allow caching (?)
      MDBOOK_VERSION: 0.4.51
      MDBOOK_ADMONISH_VERSION: "^1.20"
      MDBOOK_TOC_VERSION: 0.14.2
    steps:
      - uses: actions/checkout@v4

      - name: Cache rust/cargo and tools
        id: cache-cargo
        uses: actions/cache@v4
        env:
          cache-name: cache-cargo-modules
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/src/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          # ~/.rustup

          # hashFiles() below doesn't work?!
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.Cargo.lock') }}
          #restore-keys: |
          #  ${{ runner.os }}-build-${{ env.cache-name }}-
          #  ${{ runner.os }}-build-
          #  ${{ runner.os }}-

      - if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        name: List the state
        continue-on-error: true
        run: cargo install --list

      - name: Install mdBook
        run: |
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
          cargo install --version ${MDBOOK_ADMONISH_VERSION} mdbook-admonish
          cargo install --version ${MDBOOK_TOC_VERSION} mdbook-toc

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with mdBook
        run: |
          mdbook build -d ../book    en
          mdbook build -d ../book/de de

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
